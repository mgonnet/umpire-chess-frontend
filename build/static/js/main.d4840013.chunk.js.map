{"version":3,"sources":["NameForm.js","LobbyBrowser/LobbyBrowser.js","Lobby/PlayerDetail.js","Lobby/PlayersList.js","Lobby/Lobby.js","Game/ChessBoard.js","Game/Game.js","App.js","index.js"],"names":["NameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","handleChange","bind","assertThisInitialized","handleSubmit","event","setState","target","onRegister","preventDefault","react_default","a","createElement","class","onSubmit","type","onChange","placeholder","React","Component","LobbyBrowser","handleCreateLobby","handleJoinLobby","onCreateLobby","onJoinLobby","onClick","PlayerDetail","rol","name","me","onChooseRol","PlayerList","playerList","players","map","player","Lobby_PlayerDetail","key","Lobby","client","lobbyInfo","creator","chooseRolHandler","startGameHandler","_this2","chooseRol","then","_ref","_this3","startGame","info","onGameStart","_this4","addEventListener","PlayersList","IamCreator","pieceMapping","r","n","b","q","k","p","ChessBoard","handleCheckMoves","handleMove","position","onCheckMoves","destination","onMove","cells","Array","i","j","cellColor","style","gridColumn","concat","gridRow","pieces","piece","column","square","charCodeAt","row","color","verbose","moves","move","coord","to","zIndex","Game","gameState","initialGameState","console","log","selected","from","Game_ChessBoard","App","status","handleRegister","handleGameStart","user","register","response","window","leave","catch","lobbyName","createLobby","joinLobby","gameInfo","src_NameForm","src_LobbyBrowser_LobbyBrowser","src_Lobby_Lobby","src_Game_Game","FakeChess","Proxy","Chess","construct","Target","args","myFake","esm_construct","toConsumableArray","SQUARES","get","filter","UmpireClient","url","WSConstructor","WebSocket","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4840013.chunk.js","sourcesContent":["import React from 'react';\n\nclass NameForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    this.props.onRegister(this.state.value)\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form class=\"smallForm loginForm\" onSubmit={this.handleSubmit}>\n        <input \n          type=\"text\" \n          class=\"inputText\" \n          value={this.state.value} \n          onChange={this.handleChange}\n          placeholder=\"Player Name\"\n        />\n        <input \n          type=\"submit\"\n          class=\"boton\"\n          value=\"Join Server\" />\n      </form>\n    );  \n  }\n}\n\nexport default NameForm;\n","import React from 'react';\n\nclass LobbyBrowser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCreateLobby = this.handleCreateLobby.bind(this);\n    this.handleJoinLobby = this.handleJoinLobby.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleCreateLobby(event) {\n    this.props.onCreateLobby(this.state.value)\n    event.preventDefault();\n  }\n\n  handleJoinLobby(event) {\n    this.props.onJoinLobby(this.state.value)\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Lobby Browser</h2>\n        \n        <div class=\"smallForm\">\n          <input \n            type=\"text\"\n            class=\"inputText\"\n            placeholder=\"lobby name\"\n            value={this.state.value} \n            onChange={this.handleChange} />                       \n          <button \n            class=\"boton\"\n            onClick={this.handleCreateLobby}> \n            Create </button>\n          <button \n            class=\"boton\"\n            onClick={this.handleJoinLobby}> \n            Join </button>\n        </div>\n      </div>\n      \n    );  \n  }\n}\n\nexport default LobbyBrowser;\n","import React from 'react';\n\nfunction PlayerDetail(props) {\n  let rol\n  if(props.rol === 'w'){\n    rol = 'Whites'\n  }else if(props.rol === 'b'){\n    rol = 'Blacks'\n  }else{\n    rol = '--'\n  }\n\n  return (\n    <div> \n      <p>Name: {props.name}</p>\n      {(props.me ?         \n        <select onChange={props.onChooseRol}>\n          <option value=\"default\">--</option>\n          <option value=\"w\">Whites</option>\n          <option value=\"b\">Blacks</option>\n        </select> :\n        <p>Rol: {rol}</p>\n      )}      \n    </div>\n  )\n}\n\nexport default PlayerDetail;","import React from 'react';\nimport PlayerDetail from './PlayerDetail'\n\nfunction PlayerList(props) {\n  let playerList = props.players.map((player) =>\n    <PlayerDetail \n      key={player.name}\n      name={player.name}\n      rol={player.rol}\n      me={player.me}\n      onChooseRol={props.onChooseRol}/>\n  )\n  return <div>{playerList}</div>;\n}\n\nexport default PlayerList;","import React from 'react';\nimport PlayersList from './PlayersList';\n\nclass Lobby extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = this.props.client\n  \n    this.state = { \n      players: this.props.lobbyInfo.players,\n      creator: this.props.lobbyInfo.creator\n    };\n\n    this.chooseRolHandler = this.chooseRolHandler.bind(this)\n    this.startGameHandler = this.startGameHandler.bind(this)\n  }\n\n  chooseRolHandler(event){\n    this.client.chooseRol(event.target.value).then(({players}) => {\n      this.setState({\n        players\n      })\n    })\n  }\n\n  startGameHandler(){\n    this.client.startGame().then((info) => {\n      this.props.onGameStart(info)\n    })\n  }\n\n  componentDidMount(){\n    this.client.addEventListener('LOBBY-UPDATE', (lobbyInfo) => {\n      this.setState({\n        players: lobbyInfo.players\n      })\n    })\n\n    this.client.addEventListener('GAME-START', (lobbyInfo) => {\n      this.props.onGameStart(lobbyInfo)\n    })\n  }\n\n  render() {  \n    return (\n      <div>\n        <p>Estas en el lobby: - {this.props.name}!</p>\n        <PlayersList \n          players={this.state.players}\n          onChooseRol={this.chooseRolHandler}\n        />\n        {this.props.IamCreator && \n          <button onClick={this.startGameHandler}>Start Game!</button>\n        }\n      </div>\n    );  \n  }\n}\n\nexport default Lobby;\n","import React from 'react';\nimport '../styles/chessboard.css'\n\nconst pieceMapping = {\n  'r': '♜',\n  'n': '♞',\n  'b': '♝',\n  'q': '♛',\n  'k': '♚',\n  'p': '♟'\n}\n\n/**\n * Given a coordinate, returns the chess representation ((1,1) => 'a8')\n * @param {number} column \n * @param {number} row \n * @returns {string}\n */\nfunction coordsToChess(column, row) {\n  let newColumn = String.fromCharCode('a'.charCodeAt(0) + column)\n  let newRow = Math.abs(row-9)\n  return newColumn + newRow;\n}\n\nfunction chessToCoords(position){\n  let column = position.charCodeAt(0) - 'a'.charCodeAt(0) + 1;\n  let row = '9'.charCodeAt(0) - position.charCodeAt(1);\n  return {column, row};\n}\n\nclass ChessBoard extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleCheckMoves = this.handleCheckMoves.bind(this)\n    this.handleMove = this.handleMove.bind(this)\n  }\n\n  handleCheckMoves(position){    \n    this.props.onCheckMoves(position)\n  }\n\n  handleMove(destination) {\n    this.props.onMove(destination)\n  }\n\n  render() {\n    let cells = new Array(64)\n\n    // Color cells\n    for(let i=0; i<8; i++){\n      for(let j=0; j<8; j++){\n        let cellColor = \"cell \" + ((j%2 + i%2) % 2 ? \"cellWhite\" : \"cellBlack\");\n        cells[i*8+j] = \n          <div \n            class={cellColor}\n            style={{ \n              gridColumn: `${j+1}/${j+1}`,\n              gridRow: `${i+1}/${i+1}`\n            }}></div>\n      }\n    }  \n    \n    // Pieces\n    let pieces = this.props.pieces.map((piece) => {      \n      let column = piece.square.charCodeAt(0) - 'a'.charCodeAt(0) + 1;\n      let row = '9'.charCodeAt(0) - piece.square.charCodeAt(1)\n      let color = piece.piece.color === 'b' ? 'blackPiece' : 'whitePiece';\n      \n      return (\n        <div \n          class={color}\n          style={{ \n            gridColumn: `${column}/${column}`,\n            gridRow: `${row}/${row}` }}\n          onClick={this.handleCheckMoves.bind(null, {square: piece.square, verbose: true})}>\n          {pieceMapping[piece.piece.type]}</div>\n      )            \n    })\n\n    let moves = null;\n    // Moves\n    if(this.props.moves){\n      moves = this.props.moves.map((move) => {\n        let coord = chessToCoords(move.to)\n        return (\n          <div\n            class=\"move\"\n            style={{\n              zIndex: 100, \n              gridColumn: `${coord.column}/${coord.column}`,\n              gridRow: `${coord.row}/${coord.row}` }}\n            onClick={this.handleMove.bind(null,move.to)}\n            key={`move-${move.to}`}>            \n          </div>\n        )\n      })\n    }\n\n\n    return (\n      <div class=\"boardContainer\">\n        <div class=\"chessBoard\">\n          {cells}\n          {pieces}\n          {moves !== null && moves}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ChessBoard;","import React from 'react';\nimport ChessBoard from  './ChessBoard'\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.client = this.props.client\n    this.state = { \n      gameState: this.props.initialGameState,\n      moves: null      \n    };\n\n    this.handleMove = this.handleMove.bind(this)\n    this.handleCheckMoves = this.handleCheckMoves.bind(this)\n  }\n\n  handleMove(destination){\n    console.log('voy a mover', destination, this.state.selected)\n    this.client.move({from: this.state.selected.square, to: destination}).then((lobbyInfo) => {\n      this.setState({gameState: lobbyInfo.gameState, moves: null, selected: null})\n    })\n  }\n\n  handleCheckMoves(selected) {\n    console.log('voy a chequear', selected)\n    let moves = this.client.moves(selected)\n    this.setState({moves, selected})\n  }\n\n  componentDidMount(){\n    this.client.addEventListener('MOVE', (lobbyInfo) => {\n      this.setState({\n        gameState: lobbyInfo.gameState,\n        moves: null,\n        selected: null\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <ChessBoard \n          pieces={this.state.gameState}\n          moves={this.state.moves}\n          onCheckMoves={this.handleCheckMoves}\n          onMove={this.handleMove}>          \n        </ChessBoard>        \n      </div>\n    );  \n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport NameForm from './NameForm'\nimport LobbyBrowser from './LobbyBrowser/LobbyBrowser';\nimport Lobby from './Lobby/Lobby';\nimport Game from './Game/Game';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '', status: 'registering'};\n    \n    this.handleRegister = this.handleRegister.bind(this);\n    this.handleCreateLobby = this.handleCreateLobby.bind(this);\n    this.handleJoinLobby = this.handleJoinLobby.bind(this)\n\n    this.handleGameStart = this.handleGameStart.bind(this)\n  }\n\n  handleRegister(user) {    \n    this.props.client.register(user).then((response) => {\n      window.addEventListener('beforeunload', this.props.client.leave)\n      if(response === 'OK'){\n        this.setState({\n          status: 'looking'\n        })\n      }\n    }).catch(() => {\n      \n    })\n  }\n\n  handleCreateLobby(lobbyName) {\n    this.props.client.createLobby(lobbyName).then((response) => {\n      this.setState({\n        status: 'hosting',\n        lobbyName,\n        lobbyInfo: response\n      })\n    }).catch(() => {\n      \n    })\n  }\n\n  handleJoinLobby(lobbyName){    \n    this.props.client.joinLobby(lobbyName).then((response) => {\n      this.setState({\n        status: 'joined',\n        lobbyName,\n        lobbyInfo: response\n      })\n    }).catch(() => {\n      \n    })\n  }\n\n  handleGameStart({lobbyInfo, gameInfo}){\n    this.setState({\n      status: 'playing',\n      lobbyInfo,\n      gameInfo     \n    })\n  }\n\n\n  render() {\n    switch (this.state.status) {\n      case 'registering':\n        return(\n          <NameForm onRegister={this.handleRegister}/>\n        )\n      case 'looking':\n        return(\n          <LobbyBrowser \n            onCreateLobby={this.handleCreateLobby}\n            onJoinLobby={this.handleJoinLobby}\n          />\n        )\n      case 'hosting':\n        return(\n          <Lobby\n            onGameStart={this.handleGameStart}\n            IamCreator={true}\n            client={this.props.client}\n            name={this.state.lobbyName}\n            lobbyInfo={this.state.lobbyInfo} \n          />\n        )\n      case 'joined':\n        return(\n          <Lobby\n            onGameStart={this.handleGameStart}\n            IamCreator={false}\n            client={this.props.client}\n            name={this.state.lobbyName} \n            lobbyInfo={this.state.lobbyInfo}            \n          />\n        )\n      case 'playing':\n        return(\n          <Game\n            client={this.props.client}\n            players={this.state.lobbyInfo.players}\n            initialGameState={this.state.gameInfo.gameState}\n          />\n        )\n      \n      default:\n      return (\n        <div>\n          <p>Algo se rompio</p>\n        </div>\n      )\n    }      \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport UmpireClient from '@mgonnet/umpire-client'\nimport Chess from 'chess.js'\n\nconst FakeChess = new Proxy(Chess, {\n    construct: function (Target, args) {\n        const myFake = new Target(...args)\n        // @ts-ignore\n        myFake.state = () => myFake.SQUARES.map((square) => ({square, piece: myFake.get(square)})).filter((square) => square.piece!==null)\n        return myFake\n    }\n})\n\nlet client = UmpireClient({url: 'wss://umpire-chess.herokuapp.com/', WSConstructor: WebSocket, Game: FakeChess})\n\nReactDOM.render(<App client={client}/>, document.getElementById('root'));"],"sourceRoot":""}